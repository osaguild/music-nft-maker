/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ERC2981Mock,
  ERC2981MockInterface,
} from "../../../../contracts/erc2981/mock/ERC2981Mock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "feeNumerator",
        type: "uint16",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "feeNumerator",
        type: "uint16",
      },
    ],
    name: "AddRoyaltyInfo",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "DeleteDefaultRoyalty",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ResetTokenRoyalty",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "feeNumerator",
        type: "uint16",
      },
    ],
    name: "SetDefaultRoyalty",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "feeNumerator",
        type: "uint16",
      },
    ],
    name: "addRoyaltyInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deleteDefaultRoyalty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeDenominator",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "resetTokenRoyalty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "feeNumerator",
        type: "uint16",
      },
    ],
    name: "setDefaultRoyalty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001ebd38038062001ebd8339818101604052810190620000379190620002b0565b6200004982826200005160201b60201c565b50506200043b565b62000061620001fd60201b60201c565b61ffff168161ffff161115620000ae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000a59062000358565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000121576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200011890620003ca565b60405180910390fd5b60405180604001604052808373ffffffffffffffffffffffffffffffffffffffff1681526020018261ffff168152506000808201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548161ffff021916908361ffff1602179055509050507f211eeee454442aecec43d9573421ea9d4161e488117d081c41da74a0a5f923b68282604051620001f19291906200040e565b60405180910390a15050565b6000612710905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000239826200020c565b9050919050565b6200024b816200022c565b81146200025757600080fd5b50565b6000815190506200026b8162000240565b92915050565b600061ffff82169050919050565b6200028a8162000271565b81146200029657600080fd5b50565b600081519050620002aa816200027f565b92915050565b60008060408385031215620002ca57620002c962000207565b5b6000620002da858286016200025a565b9250506020620002ed8582860162000299565b9150509250929050565b600082825260208201905092915050565b7f455243323938313a206f7665722064656e6f6d696e61746f7200000000000000600082015250565b600062000340601983620002f7565b91506200034d8262000308565b602082019050919050565b60006020820190508181036000830152620003738162000331565b9050919050565b7f455243323938313a20696e76616c696420726563656976657200000000000000600082015250565b6000620003b2601983620002f7565b9150620003bf826200037a565b602082019050919050565b60006020820190508181036000830152620003e581620003a3565b9050919050565b620003f7816200022c565b82525050565b620004088162000271565b82525050565b6000604082019050620004256000830185620003ec565b620004346020830184620003fd565b9392505050565b611a72806200044b6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80634331f6391161005b5780634331f63914610101578063740f81a71461011d5780638a616bc014610139578063aa1b103f146101555761007d565b806301ffc9a714610082578063180b0d7e146100b25780632a55205a146100d0575b600080fd5b61009c600480360381019061009791906111b6565b61015f565b6040516100a991906111fe565b60405180910390f35b6100ba6101d9565b6040516100c79190611236565b60405180910390f35b6100ea60048036038101906100e59190611287565b6101e8565b6040516100f8929190611475565b60405180910390f35b61011b60048036038101906101169190611504565b610ab0565b005b61013760048036038101906101329190611544565b610abe565b005b610153600480360381019061014e9190611597565b610ace565b005b61015d610ada565b005b60007f2a55205a000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806101d257506101d182610ae4565b5b9050919050565b60006101e3610b4e565b905090565b606080606080600073ffffffffffffffffffffffffffffffffffffffff166000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148015610264575060006001600088815260200190815260200160002080549050145b1561030657600067ffffffffffffffff811115610284576102836115c4565b5b6040519080825280602002602001820160405280156102b25781602001602082028036833780820191505090505b509150600067ffffffffffffffff8111156102d0576102cf6115c4565b5b6040519080825280602002602001820160405280156102fe5781602001602082028036833780820191505090505b509050610aa1565b600073ffffffffffffffffffffffffffffffffffffffff166000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614801561037d57506000600160008881526020019081526020016000208054905014155b156105a357600160008781526020019081526020016000208054905067ffffffffffffffff8111156103b2576103b16115c4565b5b6040519080825280602002602001820160405280156103e05781602001602082028036833780820191505090505b509150600160008781526020019081526020016000208054905067ffffffffffffffff811115610413576104126115c4565b5b6040519080825280602002602001820160405280156104415781602001602082028036833780820191505090505b50905060005b600160008881526020019081526020016000208054905081101561059d5760016000888152602001908152602001600020818154811061048a576104896115f3565b5b9060005260206000200160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168382815181106104cb576104ca6115f3565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505061050d610b4e565b61ffff16600160008981526020019081526020016000208281548110610536576105356115f3565b5b9060005260206000200160000160149054906101000a900461ffff1661ffff16876105619190611651565b61056b91906116da565b82828151811061057e5761057d6115f3565b5b60200260200101818152505080806105959061170b565b915050610447565b50610aa0565b600073ffffffffffffffffffffffffffffffffffffffff166000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415801561061a575060006001600088815260200190815260200160002080549050145b1561078757600167ffffffffffffffff81111561063a576106396115c4565b5b6040519080825280602002602001820160405280156106685781602001602082028036833780820191505090505b509150600167ffffffffffffffff811115610686576106856115c4565b5b6040519080825280602002602001820160405280156106b45781602001602082028036833780820191505090505b5090506000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16826000815181106106f0576106ef6115f3565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050610732610b4e565b61ffff166000800160149054906101000a900461ffff1661ffff16866107589190611651565b61076291906116da565b81600081518110610776576107756115f3565b5b602002602001018181525050610a9f565b600160008781526020019081526020016000208054905060016107aa9190611754565b67ffffffffffffffff8111156107c3576107c26115c4565b5b6040519080825280602002602001820160405280156107f15781602001602082028036833780820191505090505b509150600160008781526020019081526020016000208054905060016108179190611754565b67ffffffffffffffff8111156108305761082f6115c4565b5b60405190808252806020026020018201604052801561085e5781602001602082028036833780820191505090505b5090506000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168260008151811061089a576108996115f3565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506108dc610b4e565b61ffff166000800160149054906101000a900461ffff1661ffff16866109029190611651565b61090c91906116da565b816000815181106109205761091f6115f3565b5b60200260200101818152505060005b6001600088815260200190815260200160002080549050811015610a9d57600160008881526020019081526020016000208181548110610972576109716115f3565b5b9060005260206000200160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836001836109ae9190611754565b815181106109bf576109be6115f3565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050610a01610b4e565b61ffff16600160008981526020019081526020016000208281548110610a2a57610a296115f3565b5b9060005260206000200160000160149054906101000a900461ffff1661ffff1687610a559190611651565b610a5f91906116da565b82600183610a6d9190611754565b81518110610a7e57610a7d6115f3565b5b6020026020010181815250508080610a959061170b565b91505061092f565b505b5b5b81819350935050509250929050565b610aba8282610b58565b5050565b610ac9838383610cf4565b505050565b610ad78161101d565b50565b610ae2611076565b565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6000612710905090565b610b60610b4e565b61ffff168161ffff161115610baa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba190611807565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c1a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1190611873565b60405180910390fd5b60405180604001604052808373ffffffffffffffffffffffffffffffffffffffff1681526020018261ffff168152506000808201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548161ffff021916908361ffff1602179055509050507f211eeee454442aecec43d9573421ea9d4161e488117d081c41da74a0a5f923b68282604051610ce89291906118a2565b60405180910390a15050565b6000819050600073ffffffffffffffffffffffffffffffffffffffff166000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610d72576000800160149054906101000a900461ffff1681610d6f91906118cb565b90505b60005b6001600086815260200190815260200160002080549050811015610df457600160008681526020019081526020016000208181548110610db857610db76115f3565b5b9060005260206000200160000160149054906101000a900461ffff1682610ddf91906118cb565b91508080610dec9061170b565b915050610d75565b50610dfd610b4e565b61ffff168261ffff161115610e47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3e90611807565b60405180910390fd5b610e4f610b4e565b61ffff168161ffff161115610e99576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e909061194f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f09576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f00906119bb565b60405180910390fd5b6001600085815260200190815260200160002060405180604001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018461ffff168152509080600181540180825580915050600190039060005260206000200160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548161ffff021916908361ffff16021790555050507fd94e199f189a0679c5c7d31b3e36b61173327af507fdccc566254180700c33f684848460405161100f939291906119ea565b60405180910390a150505050565b60016000828152602001908152602001600020600061103c91906110e5565b7f2d0c64cb223c165096aa5260f0c4f12caf09469f917f6139ff17e1795a01225d8160405161106b9190611a21565b60405180910390a150565b6000806000820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a81549061ffff021916905550507f4a5f27b6a26c1d168b49c56a68ba4bb0aff57144387eb6bd10db8831e9cafdd960405160405180910390a1565b50805460008255906000526020600020908101906111039190611106565b50565b5b8082111561115557600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a81549061ffff021916905550600101611107565b5090565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6111938161115e565b811461119e57600080fd5b50565b6000813590506111b08161118a565b92915050565b6000602082840312156111cc576111cb611159565b5b60006111da848285016111a1565b91505092915050565b60008115159050919050565b6111f8816111e3565b82525050565b600060208201905061121360008301846111ef565b92915050565b600061ffff82169050919050565b61123081611219565b82525050565b600060208201905061124b6000830184611227565b92915050565b6000819050919050565b61126481611251565b811461126f57600080fd5b50565b6000813590506112818161125b565b92915050565b6000806040838503121561129e5761129d611159565b5b60006112ac85828601611272565b92505060206112bd85828601611272565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061131e826112f3565b9050919050565b61132e81611313565b82525050565b60006113408383611325565b60208301905092915050565b6000602082019050919050565b6000611364826112c7565b61136e81856112d2565b9350611379836112e3565b8060005b838110156113aa5781516113918882611334565b975061139c8361134c565b92505060018101905061137d565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6113ec81611251565b82525050565b60006113fe83836113e3565b60208301905092915050565b6000602082019050919050565b6000611422826113b7565b61142c81856113c2565b9350611437836113d3565b8060005b8381101561146857815161144f88826113f2565b975061145a8361140a565b92505060018101905061143b565b5085935050505092915050565b6000604082019050818103600083015261148f8185611359565b905081810360208301526114a38184611417565b90509392505050565b6114b581611313565b81146114c057600080fd5b50565b6000813590506114d2816114ac565b92915050565b6114e181611219565b81146114ec57600080fd5b50565b6000813590506114fe816114d8565b92915050565b6000806040838503121561151b5761151a611159565b5b6000611529858286016114c3565b925050602061153a858286016114ef565b9150509250929050565b60008060006060848603121561155d5761155c611159565b5b600061156b86828701611272565b935050602061157c868287016114c3565b925050604061158d868287016114ef565b9150509250925092565b6000602082840312156115ad576115ac611159565b5b60006115bb84828501611272565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061165c82611251565b915061166783611251565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156116a05761169f611622565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006116e582611251565b91506116f083611251565b925082611700576116ff6116ab565b5b828204905092915050565b600061171682611251565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561174957611748611622565b5b600182019050919050565b600061175f82611251565b915061176a83611251565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561179f5761179e611622565b5b828201905092915050565b600082825260208201905092915050565b7f455243323938313a206f7665722064656e6f6d696e61746f7200000000000000600082015250565b60006117f16019836117aa565b91506117fc826117bb565b602082019050919050565b60006020820190508181036000830152611820816117e4565b9050919050565b7f455243323938313a20696e76616c696420726563656976657200000000000000600082015250565b600061185d6019836117aa565b915061186882611827565b602082019050919050565b6000602082019050818103600083015261188c81611850565b9050919050565b61189c81611313565b82525050565b60006040820190506118b76000830185611893565b6118c46020830184611227565b9392505050565b60006118d682611219565b91506118e183611219565b92508261ffff038211156118f8576118f7611622565b5b828201905092915050565b7f455243323938313a206f76657220746f74616c20726f79616c74792066656500600082015250565b6000611939601f836117aa565b915061194482611903565b602082019050919050565b600060208201905081810360008301526119688161192c565b9050919050565b7f455243323938313a20496e76616c696420706172616d65746572730000000000600082015250565b60006119a5601b836117aa565b91506119b08261196f565b602082019050919050565b600060208201905081810360008301526119d481611998565b9050919050565b6119e481611251565b82525050565b60006060820190506119ff60008301866119db565b611a0c6020830185611893565b611a196040830184611227565b949350505050565b6000602082019050611a3660008301846119db565b9291505056fea264697066735822122082511f107dd1aa797572f7a499d2e12c47fc9f359430dc9430d743b4d01eb8e064736f6c63430008090033";

type ERC2981MockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC2981MockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC2981Mock__factory extends ContractFactory {
  constructor(...args: ERC2981MockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    receiver: PromiseOrValue<string>,
    feeNumerator: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC2981Mock> {
    return super.deploy(
      receiver,
      feeNumerator,
      overrides || {}
    ) as Promise<ERC2981Mock>;
  }
  override getDeployTransaction(
    receiver: PromiseOrValue<string>,
    feeNumerator: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(receiver, feeNumerator, overrides || {});
  }
  override attach(address: string): ERC2981Mock {
    return super.attach(address) as ERC2981Mock;
  }
  override connect(signer: Signer): ERC2981Mock__factory {
    return super.connect(signer) as ERC2981Mock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC2981MockInterface {
    return new utils.Interface(_abi) as ERC2981MockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC2981Mock {
    return new Contract(address, _abi, signerOrProvider) as ERC2981Mock;
  }
}
