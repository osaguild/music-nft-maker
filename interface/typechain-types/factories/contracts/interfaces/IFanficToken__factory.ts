/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IFanficToken,
  IFanficTokenInterface,
} from "../../../contracts/interfaces/IFanficToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
      {
        internalType: "uint256[]",
        name: "originIds",
        type: "uint256[]",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "feeNumerator",
        type: "uint16",
      },
    ],
    name: "setDefaultRoyalty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "originToken",
        type: "address",
      },
    ],
    name: "setOriginToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "protocol",
        type: "address",
      },
    ],
    name: "setProtocol",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IFanficToken__factory {
  static readonly abi = _abi;
  static createInterface(): IFanficTokenInterface {
    return new utils.Interface(_abi) as IFanficTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IFanficToken {
    return new Contract(address, _abi, signerOrProvider) as IFanficToken;
  }
}
