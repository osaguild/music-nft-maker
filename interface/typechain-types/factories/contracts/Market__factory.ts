/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Market, MarketInterface } from "../../contracts/Market";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "saleId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "CloseSale",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "saleId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
    ],
    name: "Purchase",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "saleId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "StartSale",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "saleId",
        type: "uint256",
      },
    ],
    name: "closeSale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "saleId",
        type: "uint256",
      },
    ],
    name: "purchase",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "saleId",
        type: "uint256",
      },
    ],
    name: "sale",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address",
            name: "buyer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "startBlockNumber",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endBlockNumber",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isSold",
            type: "bool",
          },
        ],
        internalType: "struct IMarket.Sale",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "fanficToken",
        type: "address",
      },
    ],
    name: "setFanficToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "startSale",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001cf138038062001cf18339818101604052810190620000379190620001a5565b620000576200004b6200006f60201b60201c565b6200007760201b60201c565b62000068816200007760201b60201c565b50620001d7565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200016d8262000140565b9050919050565b6200017f8162000160565b81146200018b57600080fd5b50565b6000815190506200019f8162000174565b92915050565b600060208284031215620001be57620001bd6200013b565b5b6000620001ce848285016200018e565b91505092915050565b611b0a80620001e76000396000f3fe6080604052600436106100865760003560e01c806396032702116100595780639603270214610121578063a4223d531461015e578063efef39a114610187578063f2fde38b146101a3578063f4f3122e146101cc57610086565b806318160ddd1461008b578063715018a6146100b6578063765e4548146100cd5780638da5cb5b146100f6575b600080fd5b34801561009757600080fd5b506100a0610209565b6040516100ad91906111d3565b60405180910390f35b3480156100c257600080fd5b506100cb61021a565b005b3480156100d957600080fd5b506100f460048036038101906100ef9190611260565b61022e565b005b34801561010257600080fd5b5061010b61027a565b604051610118919061129c565b60405180910390f35b34801561012d57600080fd5b50610148600480360381019061014391906112e3565b6102a3565b60405161015591906113d7565b60405180910390f35b34801561016a57600080fd5b50610185600480360381019061018091906112e3565b6103bf565b005b6101a1600480360381019061019c91906112e3565b6106bd565b005b3480156101af57600080fd5b506101ca60048036038101906101c59190611260565b610c75565b005b3480156101d857600080fd5b506101f360048036038101906101ee91906113f2565b610cf9565b60405161020091906111d3565b60405180910390f35b60006102156001610fe1565b905090565b610222610fef565b61022c600061106d565b565b610236610fef565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6102ab61114f565b600360008381526020019081526020016000206040518060e001604052908160008201548152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff1615151515815250509050919050565b6000600360008381526020019081526020016000206040518060e001604052908160008201548152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff16151515158152505090506104d8611131565b73ffffffffffffffffffffffffffffffffffffffff16816040015173ffffffffffffffffffffffffffffffffffffffff1614610549576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105409061148f565b60405180910390fd5b60008160a0015114610590576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610587906114fb565b60405180910390fd5b438160a00181815250508060036000848152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff0219169083151502179055509050508060000151827ff1d7fc3941f17b182b7edb26b560ef73862b1e7ed95d281f24d966fdc410f11860405160405180910390a35050565b6000600360008381526020019081526020016000206040518060e001604052908160008201548152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff161515151581525050905034816020015114610814576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080b90611567565b60405180910390fd5b60008160a001511461085b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610852906114fb565b60405180910390fd5b610863611131565b816060019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050438160a001818152505060018160c00190151590811515815250508060036000848152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff021916908315150217905550905050600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632a55205a846000015185602001516040518363ffffffff1660e01b8152600401610a0a929190611587565b60006040518083038186803b158015610a2257600080fd5b505afa158015610a36573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610a5f91906117f6565b9150915060008360200151905060005b8351811015610b2e57838181518110610a8b57610a8a61186e565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff166108fc848381518110610abf57610abe61186e565b5b60200260200101519081150290604051600060405180830381858888f19350505050158015610af2573d6000803e3d6000fd5b50828181518110610b0657610b0561186e565b5b602002602001015182610b1991906118cc565b91508080610b2690611900565b915050610a6f565b506000811115610b8457836040015173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610b82573d6000803e3d6000fd5b505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8560400151610bcf611131565b87600001516040518463ffffffff1660e01b8152600401610bf293929190611949565b600060405180830381600087803b158015610c0c57600080fd5b505af1158015610c20573d6000803e3d6000fd5b505050508360000151857f103a2bf6ac3bab7477821385d5b123bc7857db160c09eb7f46aef30ea470955b8660200151610c58611131565b604051610c66929190611980565b60405180910390a35050505050565b610c7d610fef565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610ced576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce490611a1b565b60405180910390fd5b610cf68161106d565b50565b6000610d03611131565b73ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b8152600401610d7491906111d3565b60206040518083038186803b158015610d8c57600080fd5b505afa158015610da0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc49190611a3b565b73ffffffffffffffffffffffffffffffffffffffff1614610e1a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e119061148f565b60405180910390fd5b610e246001611139565b6040518060e00160405280848152602001838152602001610e43611131565b73ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001438152602001600081526020016000151581525060036000610e9d6001610fe1565b8152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff02191690831515021790555090505082610f8f6001610fe1565b7f803dd8e8b56f7b2c3b46eaca49d78615034423031fcf57260d8766c3f5c6501984610fb9611131565b604051610fc7929190611980565b60405180910390a3610fd96001610fe1565b905092915050565b600081600001549050919050565b610ff7611131565b73ffffffffffffffffffffffffffffffffffffffff1661101561027a565b73ffffffffffffffffffffffffffffffffffffffff161461106b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161106290611ab4565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6001816000016000828254019250508190555050565b6040518060e001604052806000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000151581525090565b6000819050919050565b6111cd816111ba565b82525050565b60006020820190506111e860008301846111c4565b92915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061122d82611202565b9050919050565b61123d81611222565b811461124857600080fd5b50565b60008135905061125a81611234565b92915050565b600060208284031215611276576112756111f8565b5b60006112848482850161124b565b91505092915050565b61129681611222565b82525050565b60006020820190506112b1600083018461128d565b92915050565b6112c0816111ba565b81146112cb57600080fd5b50565b6000813590506112dd816112b7565b92915050565b6000602082840312156112f9576112f86111f8565b5b6000611307848285016112ce565b91505092915050565b611319816111ba565b82525050565b61132881611222565b82525050565b60008115159050919050565b6113438161132e565b82525050565b60e08201600082015161135f6000850182611310565b5060208201516113726020850182611310565b506040820151611385604085018261131f565b506060820151611398606085018261131f565b5060808201516113ab6080850182611310565b5060a08201516113be60a0850182611310565b5060c08201516113d160c085018261133a565b50505050565b600060e0820190506113ec6000830184611349565b92915050565b60008060408385031215611409576114086111f8565b5b6000611417858286016112ce565b9250506020611428858286016112ce565b9150509250929050565b600082825260208201905092915050565b7f4d61726b65743a206e6f74206f776e6572000000000000000000000000000000600082015250565b6000611479601183611432565b915061148482611443565b602082019050919050565b600060208201905081810360008301526114a88161146c565b9050919050565b7f4d61726b65743a20616c726561647920636c6f73656400000000000000000000600082015250565b60006114e5601683611432565b91506114f0826114af565b602082019050919050565b60006020820190508181036000830152611514816114d8565b9050919050565b7f4d61726b65743a206e6f74206d61746368207072696365000000000000000000600082015250565b6000611551601783611432565b915061155c8261151b565b602082019050919050565b6000602082019050818103600083015261158081611544565b9050919050565b600060408201905061159c60008301856111c4565b6115a960208301846111c4565b9392505050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6115fe826115b5565b810181811067ffffffffffffffff8211171561161d5761161c6115c6565b5b80604052505050565b60006116306111ee565b905061163c82826115f5565b919050565b600067ffffffffffffffff82111561165c5761165b6115c6565b5b602082029050602081019050919050565b600080fd5b60008151905061168181611234565b92915050565b600061169a61169584611641565b611626565b905080838252602082019050602084028301858111156116bd576116bc61166d565b5b835b818110156116e657806116d28882611672565b8452602084019350506020810190506116bf565b5050509392505050565b600082601f830112611705576117046115b0565b5b8151611715848260208601611687565b91505092915050565b600067ffffffffffffffff821115611739576117386115c6565b5b602082029050602081019050919050565b600081519050611759816112b7565b92915050565b600061177261176d8461171e565b611626565b905080838252602082019050602084028301858111156117955761179461166d565b5b835b818110156117be57806117aa888261174a565b845260208401935050602081019050611797565b5050509392505050565b600082601f8301126117dd576117dc6115b0565b5b81516117ed84826020860161175f565b91505092915050565b6000806040838503121561180d5761180c6111f8565b5b600083015167ffffffffffffffff81111561182b5761182a6111fd565b5b611837858286016116f0565b925050602083015167ffffffffffffffff811115611858576118576111fd565b5b611864858286016117c8565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006118d7826111ba565b91506118e2836111ba565b9250828210156118f5576118f461189d565b5b828203905092915050565b600061190b826111ba565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561193e5761193d61189d565b5b600182019050919050565b600060608201905061195e600083018661128d565b61196b602083018561128d565b61197860408301846111c4565b949350505050565b600060408201905061199560008301856111c4565b6119a2602083018461128d565b9392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611a05602683611432565b9150611a10826119a9565b604082019050919050565b60006020820190508181036000830152611a34816119f8565b9050919050565b600060208284031215611a5157611a506111f8565b5b6000611a5f84828501611672565b91505092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611a9e602083611432565b9150611aa982611a68565b602082019050919050565b60006020820190508181036000830152611acd81611a91565b905091905056fea26469706673582212203e7b06bcd810a0e3d945bf846927bf5568481e95c57c9f01bdb191eff84d8a1064736f6c63430008090033";

type MarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Market__factory extends ContractFactory {
  constructor(...args: MarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Market> {
    return super.deploy(owner, overrides || {}) as Promise<Market>;
  }
  override getDeployTransaction(
    owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(owner, overrides || {});
  }
  override attach(address: string): Market {
    return super.attach(address) as Market;
  }
  override connect(signer: Signer): Market__factory {
    return super.connect(signer) as Market__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketInterface {
    return new utils.Interface(_abi) as MarketInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Market {
    return new Contract(address, _abi, signerOrProvider) as Market;
  }
}
