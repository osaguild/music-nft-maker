/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Market, MarketInterface } from "../../contracts/Market";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "saleId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "CloseSale",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "saleId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
    ],
    name: "Purchase",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "saleId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Send",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "saleId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "StartSale",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "saleId",
        type: "uint256",
      },
    ],
    name: "closeSale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "saleId",
        type: "uint256",
      },
    ],
    name: "purchase",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "saleId",
        type: "uint256",
      },
    ],
    name: "sale",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "buyer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "startBlockNumber",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endBlockNumber",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isSold",
            type: "bool",
          },
        ],
        internalType: "struct IMarket.Sale",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "fanficToken",
        type: "address",
      },
    ],
    name: "setFanficToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "startSale",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001e8d38038062001e8d8339818101604052810190620000379190620001a5565b620000576200004b6200006f60201b60201c565b6200007760201b60201c565b62000068816200007760201b60201c565b50620001d7565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200016d8262000140565b9050919050565b6200017f8162000160565b81146200018b57600080fd5b50565b6000815190506200019f8162000174565b92915050565b600060208284031215620001be57620001bd6200013b565b5b6000620001ce848285016200018e565b91505092915050565b611ca680620001e76000396000f3fe6080604052600436106100865760003560e01c806396032702116100595780639603270214610121578063a4223d531461015e578063efef39a114610187578063f2fde38b146101a3578063f4f3122e146101cc57610086565b806318160ddd1461008b578063715018a6146100b6578063765e4548146100cd5780638da5cb5b146100f6575b600080fd5b34801561009757600080fd5b506100a0610209565b6040516100ad9190611382565b60405180910390f35b3480156100c257600080fd5b506100cb61021a565b005b3480156100d957600080fd5b506100f460048036038101906100ef919061140f565b61022e565b005b34801561010257600080fd5b5061010b61027a565b604051610118919061144b565b60405180910390f35b34801561012d57600080fd5b5061014860048036038101906101439190611492565b6102a3565b6040516101559190611573565b60405180910390f35b34801561016a57600080fd5b5061018560048036038101906101809190611492565b610369565b005b6101a1600480360381019061019c9190611492565b610674565b005b3480156101af57600080fd5b506101ca60048036038101906101c5919061140f565b610eab565b005b3480156101d857600080fd5b506101f360048036038101906101ee919061158e565b610f2f565b6040516102009190611382565b60405180910390f35b600061021560016111ad565b905090565b6102226111bb565b61022c6000611239565b565b6102366111bb565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6102ab61131b565b600360008381526020019081526020016000206040518060c001604052908160008201548152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff1615151515815250509050919050565b6000600360008381526020019081526020016000206040518060c001604052908160008201548152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff161515151581525050905061042c6112fd565b73ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e83600001516040518263ffffffff1660e01b81526004016104a19190611382565b60206040518083038186803b1580156104b957600080fd5b505afa1580156104cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f191906115e3565b73ffffffffffffffffffffffffffffffffffffffff1614610547576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053e9061166d565b60405180910390fd5b600081608001511461058e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610585906116d9565b60405180910390fd5b438160800181815250508060036000848152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff0219169083151502179055509050508060000151827ff1d7fc3941f17b182b7edb26b560ef73862b1e7ed95d281f24d966fdc410f11860405160405180910390a35050565b6000600360008381526020019081526020016000206040518060c001604052908160008201548152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff161515151581525050905034816020015114610775576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076c90611745565b60405180910390fd5b60008160800151146107bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b3906116d9565b60405180910390fd5b6107c46112fd565b816040019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250504381608001818152505060018160a00190151590811515815250508060036000848152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff021916908315150217905550905050600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632a55205a846000015185602001516040518363ffffffff1660e01b8152600401610924929190611765565b60006040518083038186803b15801561093c57600080fd5b505afa158015610950573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061097991906119bf565b9150915060008360200151905060005b8351811015610aef578381815181106109a5576109a4611a37565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff166108fc8483815181106109d9576109d8611a37565b5b60200260200101519081150290604051600060405180830381858888f19350505050158015610a0c573d6000803e3d6000fd5b508460000151848281518110610a2557610a24611a37565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16610a4b6112fd565b73ffffffffffffffffffffffffffffffffffffffff167fc4a15db11ad09846c1f1484166882410fe9fc794ddc64eba03017695a7bd643489878681518110610a9657610a95611a37565b5b6020026020010151604051610aac929190611765565b60405180910390a4828181518110610ac757610ac6611a37565b5b602002602001015182610ada9190611a95565b91508080610ae790611ac9565b915050610989565b506000811115610d1057600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e85600001516040518263ffffffff1660e01b8152600401610b589190611382565b60206040518083038186803b158015610b7057600080fd5b505afa158015610b84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba891906115e3565b73ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610bed573d6000803e3d6000fd5b508360000151600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e86600001516040518263ffffffff1660e01b8152600401610c529190611382565b60206040518083038186803b158015610c6a57600080fd5b505afa158015610c7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca291906115e3565b73ffffffffffffffffffffffffffffffffffffffff16610cc06112fd565b73ffffffffffffffffffffffffffffffffffffffff167fc4a15db11ad09846c1f1484166882410fe9fc794ddc64eba03017695a7bd64348885604051610d07929190611765565b60405180910390a45b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e87600001516040518263ffffffff1660e01b8152600401610dad9190611382565b60206040518083038186803b158015610dc557600080fd5b505afa158015610dd9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dfd91906115e3565b610e056112fd565b87600001516040518463ffffffff1660e01b8152600401610e2893929190611b12565b600060405180830381600087803b158015610e4257600080fd5b505af1158015610e56573d6000803e3d6000fd5b505050508360000151857f103a2bf6ac3bab7477821385d5b123bc7857db160c09eb7f46aef30ea470955b8660200151610e8e6112fd565b604051610e9c929190611b49565b60405180910390a35050505050565b610eb36111bb565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610f23576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1a90611be4565b60405180910390fd5b610f2c81611239565b50565b6000610f396112fd565b73ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b8152600401610faa9190611382565b60206040518083038186803b158015610fc257600080fd5b505afa158015610fd6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ffa91906115e3565b73ffffffffffffffffffffffffffffffffffffffff1614611050576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110479061166d565b60405180910390fd5b61105a6001611305565b6040518060c00160405280848152602001838152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020014381526020016000815260200160001515815250600360006110b060016111ad565b8152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff0219169083151502179055509050508261115b60016111ad565b7f803dd8e8b56f7b2c3b46eaca49d78615034423031fcf57260d8766c3f5c65019846111856112fd565b604051611193929190611b49565b60405180910390a36111a560016111ad565b905092915050565b600081600001549050919050565b6111c36112fd565b73ffffffffffffffffffffffffffffffffffffffff166111e161027a565b73ffffffffffffffffffffffffffffffffffffffff1614611237576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161122e90611c50565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6001816000016000828254019250508190555050565b6040518060c001604052806000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000151581525090565b6000819050919050565b61137c81611369565b82525050565b60006020820190506113976000830184611373565b92915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006113dc826113b1565b9050919050565b6113ec816113d1565b81146113f757600080fd5b50565b600081359050611409816113e3565b92915050565b600060208284031215611425576114246113a7565b5b6000611433848285016113fa565b91505092915050565b611445816113d1565b82525050565b6000602082019050611460600083018461143c565b92915050565b61146f81611369565b811461147a57600080fd5b50565b60008135905061148c81611466565b92915050565b6000602082840312156114a8576114a76113a7565b5b60006114b68482850161147d565b91505092915050565b6114c881611369565b82525050565b6114d7816113d1565b82525050565b60008115159050919050565b6114f2816114dd565b82525050565b60c08201600082015161150e60008501826114bf565b50602082015161152160208501826114bf565b50604082015161153460408501826114ce565b50606082015161154760608501826114bf565b50608082015161155a60808501826114bf565b5060a082015161156d60a08501826114e9565b50505050565b600060c08201905061158860008301846114f8565b92915050565b600080604083850312156115a5576115a46113a7565b5b60006115b38582860161147d565b92505060206115c48582860161147d565b9150509250929050565b6000815190506115dd816113e3565b92915050565b6000602082840312156115f9576115f86113a7565b5b6000611607848285016115ce565b91505092915050565b600082825260208201905092915050565b7f4d61726b65743a206e6f74206f776e6572000000000000000000000000000000600082015250565b6000611657601183611610565b915061166282611621565b602082019050919050565b600060208201905081810360008301526116868161164a565b9050919050565b7f4d61726b65743a20616c726561647920636c6f73656400000000000000000000600082015250565b60006116c3601683611610565b91506116ce8261168d565b602082019050919050565b600060208201905081810360008301526116f2816116b6565b9050919050565b7f4d61726b65743a206e6f74206d61746368207072696365000000000000000000600082015250565b600061172f601783611610565b915061173a826116f9565b602082019050919050565b6000602082019050818103600083015261175e81611722565b9050919050565b600060408201905061177a6000830185611373565b6117876020830184611373565b9392505050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6117dc82611793565b810181811067ffffffffffffffff821117156117fb576117fa6117a4565b5b80604052505050565b600061180e61139d565b905061181a82826117d3565b919050565b600067ffffffffffffffff82111561183a576118396117a4565b5b602082029050602081019050919050565b600080fd5b600061186361185e8461181f565b611804565b905080838252602082019050602084028301858111156118865761188561184b565b5b835b818110156118af578061189b88826115ce565b845260208401935050602081019050611888565b5050509392505050565b600082601f8301126118ce576118cd61178e565b5b81516118de848260208601611850565b91505092915050565b600067ffffffffffffffff821115611902576119016117a4565b5b602082029050602081019050919050565b60008151905061192281611466565b92915050565b600061193b611936846118e7565b611804565b9050808382526020820190506020840283018581111561195e5761195d61184b565b5b835b8181101561198757806119738882611913565b845260208401935050602081019050611960565b5050509392505050565b600082601f8301126119a6576119a561178e565b5b81516119b6848260208601611928565b91505092915050565b600080604083850312156119d6576119d56113a7565b5b600083015167ffffffffffffffff8111156119f4576119f36113ac565b5b611a00858286016118b9565b925050602083015167ffffffffffffffff811115611a2157611a206113ac565b5b611a2d85828601611991565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611aa082611369565b9150611aab83611369565b925082821015611abe57611abd611a66565b5b828203905092915050565b6000611ad482611369565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611b0757611b06611a66565b5b600182019050919050565b6000606082019050611b27600083018661143c565b611b34602083018561143c565b611b416040830184611373565b949350505050565b6000604082019050611b5e6000830185611373565b611b6b602083018461143c565b9392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611bce602683611610565b9150611bd982611b72565b604082019050919050565b60006020820190508181036000830152611bfd81611bc1565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611c3a602083611610565b9150611c4582611c04565b602082019050919050565b60006020820190508181036000830152611c6981611c2d565b905091905056fea264697066735822122091d5d41aa03d8e1ed081befffd0b1fb7f71fcc95fca3455c77002caf3928f5eb64736f6c63430008090033";

type MarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Market__factory extends ContractFactory {
  constructor(...args: MarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Market> {
    return super.deploy(owner, overrides || {}) as Promise<Market>;
  }
  override getDeployTransaction(
    owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(owner, overrides || {});
  }
  override attach(address: string): Market {
    return super.attach(address) as Market;
  }
  override connect(signer: Signer): Market__factory {
    return super.connect(signer) as Market__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketInterface {
    return new utils.Interface(_abi) as MarketInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Market {
    return new Contract(address, _abi, signerOrProvider) as Market;
  }
}
