/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Market, MarketInterface } from "../../contracts/Market";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "saleId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "CloseSale",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "saleId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
    ],
    name: "Purchase",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "saleId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "StartSale",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "saleId",
        type: "uint256",
      },
    ],
    name: "closeSale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "saleId",
        type: "uint256",
      },
    ],
    name: "purchase",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "saleId",
        type: "uint256",
      },
    ],
    name: "sale",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "buyer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "startBlockNumber",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endBlockNumber",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isSold",
            type: "bool",
          },
        ],
        internalType: "struct IMarket.Sale",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "fanficToken",
        type: "address",
      },
    ],
    name: "setFanficToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "startSale",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001cc538038062001cc58339818101604052810190620000379190620001a5565b620000576200004b6200006f60201b60201c565b6200007760201b60201c565b62000068816200007760201b60201c565b50620001d7565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200016d8262000140565b9050919050565b6200017f8162000160565b81146200018b57600080fd5b50565b6000815190506200019f8162000174565b92915050565b600060208284031215620001be57620001bd6200013b565b5b6000620001ce848285016200018e565b91505092915050565b611ade80620001e76000396000f3fe6080604052600436106100865760003560e01c806396032702116100595780639603270214610121578063a4223d531461015e578063efef39a114610187578063f2fde38b146101a3578063f4f3122e146101cc57610086565b806318160ddd1461008b578063715018a6146100b6578063765e4548146100cd5780638da5cb5b146100f6575b600080fd5b34801561009757600080fd5b506100a0610209565b6040516100ad91906111ba565b60405180910390f35b3480156100c257600080fd5b506100cb61021a565b005b3480156100d957600080fd5b506100f460048036038101906100ef9190611247565b61022e565b005b34801561010257600080fd5b5061010b61027a565b6040516101189190611283565b60405180910390f35b34801561012d57600080fd5b50610148600480360381019061014391906112ca565b6102a3565b60405161015591906113ab565b60405180910390f35b34801561016a57600080fd5b50610185600480360381019061018091906112ca565b610369565b005b6101a1600480360381019061019c91906112ca565b610674565b005b3480156101af57600080fd5b506101ca60048036038101906101c59190611247565b610ce3565b005b3480156101d857600080fd5b506101f360048036038101906101ee91906113c6565b610d67565b60405161020091906111ba565b60405180910390f35b60006102156001610fe5565b905090565b610222610ff3565b61022c6000611071565b565b610236610ff3565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6102ab611153565b600360008381526020019081526020016000206040518060c001604052908160008201548152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff1615151515815250509050919050565b6000600360008381526020019081526020016000206040518060c001604052908160008201548152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff161515151581525050905061042c611135565b73ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e83600001516040518263ffffffff1660e01b81526004016104a191906111ba565b60206040518083038186803b1580156104b957600080fd5b505afa1580156104cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f1919061141b565b73ffffffffffffffffffffffffffffffffffffffff1614610547576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053e906114a5565b60405180910390fd5b600081608001511461058e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058590611511565b60405180910390fd5b438160800181815250508060036000848152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff0219169083151502179055509050508060000151827ff1d7fc3941f17b182b7edb26b560ef73862b1e7ed95d281f24d966fdc410f11860405160405180910390a35050565b6000600360008381526020019081526020016000206040518060c001604052908160008201548152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff161515151581525050905034816020015114610775576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076c9061157d565b60405180910390fd5b60008160800151146107bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b390611511565b60405180910390fd5b6107c4611135565b816040019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250504381608001818152505060018160a00190151590811515815250508060036000848152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff021916908315150217905550905050600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632a55205a846000015185602001516040518363ffffffff1660e01b815260040161092492919061159d565b60006040518083038186803b15801561093c57600080fd5b505afa158015610950573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061097991906117f7565b9150915060008360200151905060005b8351811015610a48578381815181106109a5576109a461186f565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff166108fc8483815181106109d9576109d861186f565b5b60200260200101519081150290604051600060405180830381858888f19350505050158015610a0c573d6000803e3d6000fd5b50828181518110610a2057610a1f61186f565b5b602002602001015182610a3391906118cd565b91508080610a4090611901565b915050610989565b506000811115610b4857600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e85600001516040518263ffffffff1660e01b8152600401610ab191906111ba565b60206040518083038186803b158015610ac957600080fd5b505afa158015610add573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b01919061141b565b73ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610b46573d6000803e3d6000fd5b505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e87600001516040518263ffffffff1660e01b8152600401610be591906111ba565b60206040518083038186803b158015610bfd57600080fd5b505afa158015610c11573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c35919061141b565b610c3d611135565b87600001516040518463ffffffff1660e01b8152600401610c609392919061194a565b600060405180830381600087803b158015610c7a57600080fd5b505af1158015610c8e573d6000803e3d6000fd5b505050508360000151857f103a2bf6ac3bab7477821385d5b123bc7857db160c09eb7f46aef30ea470955b8660200151610cc6611135565b604051610cd4929190611981565b60405180910390a35050505050565b610ceb610ff3565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610d5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5290611a1c565b60405180910390fd5b610d6481611071565b50565b6000610d71611135565b73ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b8152600401610de291906111ba565b60206040518083038186803b158015610dfa57600080fd5b505afa158015610e0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e32919061141b565b73ffffffffffffffffffffffffffffffffffffffff1614610e88576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7f906114a5565b60405180910390fd5b610e92600161113d565b6040518060c00160405280848152602001838152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001438152602001600081526020016000151581525060036000610ee86001610fe5565b8152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff02191690831515021790555090505082610f936001610fe5565b7f803dd8e8b56f7b2c3b46eaca49d78615034423031fcf57260d8766c3f5c6501984610fbd611135565b604051610fcb929190611981565b60405180910390a3610fdd6001610fe5565b905092915050565b600081600001549050919050565b610ffb611135565b73ffffffffffffffffffffffffffffffffffffffff1661101961027a565b73ffffffffffffffffffffffffffffffffffffffff161461106f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161106690611a88565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6001816000016000828254019250508190555050565b6040518060c001604052806000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000151581525090565b6000819050919050565b6111b4816111a1565b82525050565b60006020820190506111cf60008301846111ab565b92915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611214826111e9565b9050919050565b61122481611209565b811461122f57600080fd5b50565b6000813590506112418161121b565b92915050565b60006020828403121561125d5761125c6111df565b5b600061126b84828501611232565b91505092915050565b61127d81611209565b82525050565b60006020820190506112986000830184611274565b92915050565b6112a7816111a1565b81146112b257600080fd5b50565b6000813590506112c48161129e565b92915050565b6000602082840312156112e0576112df6111df565b5b60006112ee848285016112b5565b91505092915050565b611300816111a1565b82525050565b61130f81611209565b82525050565b60008115159050919050565b61132a81611315565b82525050565b60c08201600082015161134660008501826112f7565b50602082015161135960208501826112f7565b50604082015161136c6040850182611306565b50606082015161137f60608501826112f7565b50608082015161139260808501826112f7565b5060a08201516113a560a0850182611321565b50505050565b600060c0820190506113c06000830184611330565b92915050565b600080604083850312156113dd576113dc6111df565b5b60006113eb858286016112b5565b92505060206113fc858286016112b5565b9150509250929050565b6000815190506114158161121b565b92915050565b600060208284031215611431576114306111df565b5b600061143f84828501611406565b91505092915050565b600082825260208201905092915050565b7f4d61726b65743a206e6f74206f776e6572000000000000000000000000000000600082015250565b600061148f601183611448565b915061149a82611459565b602082019050919050565b600060208201905081810360008301526114be81611482565b9050919050565b7f4d61726b65743a20616c726561647920636c6f73656400000000000000000000600082015250565b60006114fb601683611448565b9150611506826114c5565b602082019050919050565b6000602082019050818103600083015261152a816114ee565b9050919050565b7f4d61726b65743a206e6f74206d61746368207072696365000000000000000000600082015250565b6000611567601783611448565b915061157282611531565b602082019050919050565b600060208201905081810360008301526115968161155a565b9050919050565b60006040820190506115b260008301856111ab565b6115bf60208301846111ab565b9392505050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611614826115cb565b810181811067ffffffffffffffff82111715611633576116326115dc565b5b80604052505050565b60006116466111d5565b9050611652828261160b565b919050565b600067ffffffffffffffff821115611672576116716115dc565b5b602082029050602081019050919050565b600080fd5b600061169b61169684611657565b61163c565b905080838252602082019050602084028301858111156116be576116bd611683565b5b835b818110156116e757806116d38882611406565b8452602084019350506020810190506116c0565b5050509392505050565b600082601f830112611706576117056115c6565b5b8151611716848260208601611688565b91505092915050565b600067ffffffffffffffff82111561173a576117396115dc565b5b602082029050602081019050919050565b60008151905061175a8161129e565b92915050565b600061177361176e8461171f565b61163c565b9050808382526020820190506020840283018581111561179657611795611683565b5b835b818110156117bf57806117ab888261174b565b845260208401935050602081019050611798565b5050509392505050565b600082601f8301126117de576117dd6115c6565b5b81516117ee848260208601611760565b91505092915050565b6000806040838503121561180e5761180d6111df565b5b600083015167ffffffffffffffff81111561182c5761182b6111e4565b5b611838858286016116f1565b925050602083015167ffffffffffffffff811115611859576118586111e4565b5b611865858286016117c9565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006118d8826111a1565b91506118e3836111a1565b9250828210156118f6576118f561189e565b5b828203905092915050565b600061190c826111a1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561193f5761193e61189e565b5b600182019050919050565b600060608201905061195f6000830186611274565b61196c6020830185611274565b61197960408301846111ab565b949350505050565b600060408201905061199660008301856111ab565b6119a36020830184611274565b9392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611a06602683611448565b9150611a11826119aa565b604082019050919050565b60006020820190508181036000830152611a35816119f9565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611a72602083611448565b9150611a7d82611a3c565b602082019050919050565b60006020820190508181036000830152611aa181611a65565b905091905056fea2646970667358221220e7ef31e59acc7a3f5d2e2f300e017faafe0d88c84b39776f651665f830a0237064736f6c63430008090033";

type MarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Market__factory extends ContractFactory {
  constructor(...args: MarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Market> {
    return super.deploy(owner, overrides || {}) as Promise<Market>;
  }
  override getDeployTransaction(
    owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(owner, overrides || {});
  }
  override attach(address: string): Market {
    return super.attach(address) as Market;
  }
  override connect(signer: Signer): Market__factory {
    return super.connect(signer) as Market__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketInterface {
    return new utils.Interface(_abi) as MarketInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Market {
    return new Contract(address, _abi, signerOrProvider) as Market;
  }
}
